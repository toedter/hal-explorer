plugins {
  id "com.github.node-gradle.node" version "7.1.0"
  id 'org.asciidoctor.jvm.convert' version '4.0.3'
}

repositories {
  mavenCentral()
  maven { url 'https://repo.spring.io/release' }
  maven { url 'https://repo.spring.io/milestone' }
}

apply plugin: 'java'

node {
  version = '20.16.0'
  download = true
  workDir = file("$projectDir/build/node")
}

yarn_install.inputs.file new File(projectDir, "package.json")
yarn_install.inputs.file new File(projectDir, "yarn.lock")
yarn_install.outputs.dir new File(projectDir, "node_modules")

yarn_build.inputs.dir new File(projectDir, "src")
yarn_build.outputs.dir new File(projectDir, "dist")

yarn_build.dependsOn yarn_install, yarn_lint //, yarn_test

//task clean() {
//  doFirst {
//    delete "dist"
//    delete "build"
//  }
//}

// task build

build.dependsOn yarn_build

version = '1.2.4-SNAPSHOT'

configurations {
  docs
}

dependencies {
  docs "io.spring.asciidoctor.backends:spring-asciidoctor-backends:0.0.7"
}

asciidoctor {
  configurations "docs"
  sourceDir "doc"
  attributes 'version': "${project.version}"
  baseDirFollowsSourceFile()
  outputOptions {
    backends "spring-html"
  }
}

tasks.register('doc') {
  dependsOn asciidoctor

  doLast {
    copy {
      from "$projectDir/dist/hal-explorer/browser"
      into "$projectDir/build/docs/gh-pages/snapshot/hal-explorer"
    }

    copy {
      from "$projectDir/test-data"
      into "$projectDir/build/docs/gh-pages/snapshot/hal-explorer/examples"
      filter { line -> line.replaceAll('http://localhost:3000', 'https://toedter.github.io/hal-explorer/snapshot/hal-explorer/examples') }
    }

    copy {
      from "$projectDir/doc/img/"
      into "$projectDir/build/docs/asciidoc/img/"
    }

    copy {
      from "$projectDir/build/docs/asciidoc"
      into "$projectDir/build/docs/gh-pages/snapshot/reference-doc"
    }
  }
}

